/* eslint-env jest */

const redux = require('redux');
const listen = require('../src/index');
// import { createStore } from 'redux';

const reducer = (state = 0, action) => {
  console.log(state, action.type);
  if (action.type === 'INCREMENT') {
    return state + 1;
  } else {
    return state;
  }
};

const increment = { type: 'INCREMENT' };

describe('middleware setup', () => {
  it('has set up the test runner correctly', () => {
    expect(true).toBeTruthy();
  });

  it('has initialized redux', (done) => {
    const store = redux.createStore(reducer);

    store.subscribe(() => {
      expect(store.getState()).toEqual(1);
      done();
    });

    store.dispatch(increment);
  });

  it('applies the listener middleware', (done) => {
    const listener = listen();

    const store = redux.createStore(
      reducer,
      redux.applyMiddleware(listener.middleware)
    );

    store.dispatch(increment);

    store.subscribe(() => {
      expect(store.getState()).toEqual(2);
      done();
    });

    store.dispatch(increment);
  });

  it('registers a new listener', (done) => {
    const listener
    const store = redux.createStore(
      reducer,
      redux.applyMiddleware(listenerMiddleware)
    );

    store.dispatch(increment);

    store.subscribe(() => {
      expect(store.getState()).toEqual(2);
      done();
    });

    store.dispatch(increment);
  });
});
