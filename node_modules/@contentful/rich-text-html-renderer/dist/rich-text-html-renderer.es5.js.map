{"version":3,"file":"rich-text-html-renderer.es5.js","sources":["../node_modules/@contentful/rich-text-types/src/blocks.ts","../node_modules/@contentful/rich-text-types/src/inlines.ts","../node_modules/@contentful/rich-text-types/src/marks.ts","../node_modules/@contentful/rich-text-types/src/schemaConstraints.ts","../src/index.ts"],"sourcesContent":["/**\n * Map of all Contentful block types. Blocks contain inline or block nodes.\n */\n\nexport default {\n  DOCUMENT: 'document',\n  PARAGRAPH: 'paragraph',\n\n  HEADING_1: 'heading-1',\n  HEADING_2: 'heading-2',\n  HEADING_3: 'heading-3',\n  HEADING_4: 'heading-4',\n  HEADING_5: 'heading-5',\n  HEADING_6: 'heading-6',\n\n  OL_LIST: 'ordered-list',\n  UL_LIST: 'unordered-list',\n  LIST_ITEM: 'list-item',\n\n  HR: 'hr',\n  QUOTE: 'blockquote',\n\n  EMBEDDED_ENTRY: 'embedded-entry-block',\n  EMBEDDED_ASSET: 'embedded-asset-block',\n};\n","/**\n * Map of all Contentful inline types. Inline contain inline or text nodes.\n */\n\nexport default {\n  HYPERLINK: 'hyperlink',\n  ENTRY_HYPERLINK: 'entry-hyperlink',\n  ASSET_HYPERLINK: 'asset-hyperlink',\n  EMBEDDED_ENTRY: 'embedded-entry-inline',\n};\n","/**\n * Map of all Contentful marks.\n */\nexport default {\n  BOLD: 'bold',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  CODE: 'code',\n};\n","import BLOCKS from './blocks';\n\n/**\n * Array of all top level block types.\n * Only these block types can be the direct children of the document.\n */\nexport const TOP_LEVEL_BLOCKS = [\n  BLOCKS.PARAGRAPH,\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n\n  BLOCKS.OL_LIST,\n  BLOCKS.UL_LIST,\n  BLOCKS.HR,\n  BLOCKS.QUOTE,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n];\n\n/**\n * Array of all void block types\n */\nexport const VOID_BLOCKS = [BLOCKS.HR, BLOCKS.EMBEDDED_ENTRY, BLOCKS.EMBEDDED_ASSET];\n\n/**\n * Dictionary of all container block types, and the set block types they accept as children.\n */\nexport const CONTAINERS = {\n  [BLOCKS.OL_LIST]: [BLOCKS.LIST_ITEM],\n  [BLOCKS.UL_LIST]: [BLOCKS.LIST_ITEM],\n  [BLOCKS.LIST_ITEM]: [...TOP_LEVEL_BLOCKS],\n  [BLOCKS.QUOTE]: [BLOCKS.PARAGRAPH],\n};\n","import {\n  Document,\n  Node,\n  Mark,\n  Text,\n  BLOCKS,\n  MARKS,\n  INLINES,\n  Block,\n  Inline,\n} from '@contentful/rich-text-types';\n\nconst defaultNodeRenderers: RenderNode = {\n  [BLOCKS.PARAGRAPH]: (node, next) => `<p>${next(node.content)}</p>`,\n  [BLOCKS.HEADING_1]: (node, next) => `<h1>${next(node.content)}</h1>`,\n  [BLOCKS.HEADING_2]: (node, next) => `<h2>${next(node.content)}</h2>`,\n  [BLOCKS.HEADING_3]: (node, next) => `<h3>${next(node.content)}</h3>`,\n  [BLOCKS.HEADING_4]: (node, next) => `<h4>${next(node.content)}</h4>`,\n  [BLOCKS.HEADING_5]: (node, next) => `<h5>${next(node.content)}</h5>`,\n  [BLOCKS.HEADING_6]: (node, next) => `<h6>${next(node.content)}</h6>`,\n  [BLOCKS.EMBEDDED_ENTRY]: (node, next) => `<div>${next(node.content)}</div>`,\n  [BLOCKS.UL_LIST]: (node, next) => `<ul>${next(node.content)}</ul>`,\n  [BLOCKS.OL_LIST]: (node, next) => `<ol>${next(node.content)}</ol>`,\n  [BLOCKS.LIST_ITEM]: (node, next) => `<li>${next(node.content)}</li>`,\n  [BLOCKS.QUOTE]: (node, next) => `<blockquote>${next(node.content)}</blockquote>`,\n  [BLOCKS.HR]: () => '<hr/>',\n  [INLINES.ASSET_HYPERLINK]: node => defaultInline(INLINES.ASSET_HYPERLINK, node),\n  [INLINES.ENTRY_HYPERLINK]: node => defaultInline(INLINES.ENTRY_HYPERLINK, node),\n  [INLINES.EMBEDDED_ENTRY]: node => defaultInline(INLINES.EMBEDDED_ENTRY, node),\n  [INLINES.HYPERLINK]: (node, next) => `<a href=\"${node.data.uri}\">${next(node.content)}</a>`,\n};\n\nconst defaultMarkRenderers: RenderMark = {\n  [MARKS.BOLD]: text => `<b>${text}</b>`,\n  [MARKS.ITALIC]: text => `<i>${text}</i>`,\n  [MARKS.UNDERLINE]: text => `<u>${text}</u>`,\n  [MARKS.CODE]: text => `<code>${text}</code>`,\n};\n\nconst defaultInline = (type: string, node: Inline) =>\n  `<span>type: ${type} id: ${node.data.target.sys.id}</span>`;\n\nexport type CommonNode = Text | Block | Inline;\n\nexport interface Next {\n  (nodes: CommonNode[]): string;\n}\n\nexport interface NodeRenderer {\n  (node: Block | Inline, next: Next): string;\n}\n\nexport interface RenderNode {\n  [k: string]: NodeRenderer;\n}\n\nexport interface RenderMark {\n  [k: string]: (text: string) => string;\n}\n\nexport interface Options {\n  /**\n   * Node renderers\n   */\n  renderNode?: RenderNode;\n  /**\n   * Mark renderers\n   */\n  renderMark?: RenderMark;\n}\n\n/**\n * Serialize a Contentful Rich Text `document` to an html string.\n */\nexport function documentToHtmlString(\n  richTextDocument: Document,\n  options: Partial<Options> = {},\n): string {\n  return nodeListToHtmlString(richTextDocument.content, {\n    renderNode: {\n      ...defaultNodeRenderers,\n      ...options.renderNode,\n    },\n    renderMark: {\n      ...defaultMarkRenderers,\n      ...options.renderMark,\n    },\n  });\n}\n\nfunction nodeListToHtmlString(nodes: CommonNode[], { renderNode, renderMark }: Options): string {\n  return nodes.map<string>(node => nodeToHtmlString(node, { renderNode, renderMark })).join('');\n}\n\nfunction nodeToHtmlString(node: CommonNode, { renderNode, renderMark }: Options): string {\n  if (isText(node)) {\n    if (node.marks.length > 0) {\n      return node.marks.reduce((value: string, mark: Mark) => {\n        if (!renderMark[mark.type]) {\n          return value;\n        }\n        return renderMark[mark.type](value);\n      }, node.value);\n    }\n\n    return node.value;\n  } else {\n    const nextNode: Next = nodes => nodeListToHtmlString(nodes, { renderMark, renderNode });\n    if (!node.nodeType || !renderNode[node.nodeType]) {\n      // TODO: Figure what to return when passed an unrecognized node.\n      return '';\n    }\n    return renderNode[node.nodeType](node, nextNode);\n  }\n}\nfunction isText(node: Node): node is Text {\n  return node.nodeType === 'text';\n}\n"],"names":["BLOCKS","INLINES","MARKS"],"mappings":"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"}