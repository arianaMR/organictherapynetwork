"use strict";

exports.__esModule = true;
exports.default = exports.defaultProps = exports.propTypes = exports.PrimaryCommonProps = exports.ButtonCommon = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n  background-color: ", ";\n  border: ", ";\n  color: ", ";\n  font-size: ", ";\n  ", ";\n\n  :hover:not([disabled]) {\n    color: ", ";\n    border: ", ";\n    background-color: ", ";\n    cursor: ", ";\n  }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n  border-radius: 5px;\n  height: 38px;\n  font-weight: 600;\n\n  :disabled {\n    background-color: ", ";\n    border: 1px solid ", ";\n    cursor: not-allowed;\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }

var ButtonCommon = _styledComponents.default.button(_templateObject(), function (props) {
  return props.theme.colors.gray3;
}, function (props) {
  return props.theme.colors.gray3;
});

exports.ButtonCommon = ButtonCommon;

var PrimaryCommonProps = function PrimaryCommonProps(bgHoverColor) {
  return {
    fontSize: '15px',
    width: '150px',
    bgHoverColor: bgHoverColor
  };
};

exports.PrimaryCommonProps = PrimaryCommonProps;
var StyledButton = (0, _styledComponents.default)(ButtonCommon)(_templateObject2(), function (props) {
  return props.theme.colors[props.bgColor];
}, function (props) {
  return props.borderColor ? "1px solid " + props.theme.colors[props.borderColor] : 'none';
}, function (props) {
  return props.theme.colors[props.textColor];
}, function (props) {
  return props.fontSize || '13px';
}, function (props) {
  return props.width && "width: " + props.width + ";";
}, function (props) {
  return props.isStatic || props.theme.colors.white;
}, function (props) {
  if (props.isStatic) return null;
  if (props.bgHoverColor) return "1px solid " + props.theme.colors[props.bgHoverColor];
  return "1px solid " + props.theme.colors.red2;
}, function (props) {
  if (props.isStatic) return null;
  if (props.bgHoverColor) return props.theme.colors[props.bgHoverColor];
  return props.theme.colors.red2;
}, function (props) {
  return props.loading && 'progress';
});

var ButtonTemplate = function ButtonTemplate(_ref) {
  var children = _ref.children,
      onClick = _ref.onClick,
      bgColor = _ref.bgColor,
      textColor = _ref.textColor,
      disabled = _ref.disabled,
      borderColor = _ref.borderColor,
      bgHoverColor = _ref.bgHoverColor,
      loading = _ref.loading,
      width = _ref.width,
      fontSize = _ref.fontSize,
      isStatic = _ref.isStatic,
      props = _objectWithoutPropertiesLoose(_ref, ["children", "onClick", "bgColor", "textColor", "disabled", "borderColor", "bgHoverColor", "loading", "width", "fontSize", "isStatic"]);

  return _react.default.createElement(StyledButton, _extends({
    onClick: onClick,
    disabled: disabled,
    bgColor: bgColor,
    textColor: textColor,
    borderColor: borderColor,
    bgHoverColor: bgHoverColor,
    loading: loading,
    width: width,
    fontSize: fontSize,
    isStatic: isStatic
  }, props), children);
};

var propTypes = {
  children: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.node, _propTypes.default.string]).isRequired,
  onClick: _propTypes.default.func.isRequired,
  bgColor: _propTypes.default.string.isRequired,
  textColor: _propTypes.default.string.isRequired,
  disabled: _propTypes.default.bool,
  borderColor: _propTypes.default.string.isRequired,
  bgHoverColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),
  // workaround for proptypes error i kept getting in Button.stories.js
  width: _propTypes.default.string,
  fontSize: _propTypes.default.string,
  isStatic: _propTypes.default.bool,
  loading: _propTypes.default.bool
};
exports.propTypes = propTypes;
var defaultProps = {
  disabled: false,
  bgHoverColor: '',
  width: '100px',
  fontSize: '13px',
  loading: false,
  isStatic: false
};
exports.defaultProps = defaultProps;
ButtonTemplate.propTypes = propTypes;
ButtonTemplate.defaultProps = defaultProps;
var _default = ButtonTemplate;
exports.default = _default;