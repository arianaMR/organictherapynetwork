"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = require("prop-types");

var _reduxForm = require("redux-form");

var _uuid = _interopRequireDefault(require("uuid"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _InputCommon = require("./InputCommon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n  font-weight: 600;\n  background-color: ", ";\n  color: ", ";\n  font-family: 'Avenir Next Denim Bold', 'Avenir Next', sans-serif !important;\n\n  :hover {\n    background-color: ", ";\n  }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n    -webkit-text-fill-color: ", ";\n    color: blue;\n  "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n  input {\n    border: 1px solid ", ";\n    font-family: 'Avenir Next Denim Bold', 'Avenir Next', sans-serif !important;\n    color: ", ";\n    font-size: 13px;\n\n    ::placeholder {\n      color: ", ";\n    }\n  }\n\n  ", "\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }

var StyledContainer = (0, _styledComponents.default)(_InputCommon.Container)(_templateObject(), function (props) {
  return props.theme.colors.gray4;
}, function (props) {
  return props.theme.colors.red2;
}, function (p) {
  return p.theme.colors.red1;
}, function (p) {
  return p.theme.autofill(_templateObject2(), p.theme.colors.red2);
});
var StyledButton = (0, _styledComponents.default)(_InputCommon.Button)(_templateObject3(), function (props) {
  return props.theme.colors.red2;
}, function (props) {
  return props.theme.colors.white;
}, function (p) {
  return p.theme.colors.red1;
});

var Input = function Input(_ref) {
  var _ref$input = _ref.input,
      value = _ref$input.value,
      onChange = _ref$input.onChange,
      name = _ref$input.name,
      input = _objectWithoutPropertiesLoose(_ref$input, ["value", "onChange", "name"]),
      id = _ref.id,
      disabled = _ref.disabled,
      placeholder = _ref.placeholder,
      type = _ref.type,
      button = _ref.button;

  return _react.default.createElement(StyledContainer, {
    id: id,
    className: "input"
  }, _react.default.createElement("input", _extends({
    type: type,
    name: name,
    onChange: onChange,
    disabled: disabled,
    placeholder: placeholder
  }, input)), button && _react.default.createElement(StyledButton, {
    disabled: button.disabled || false,
    onClick: function onClick() {
      if (button.onClick) button.onClick();
    }
  }, button.label));
};

Input.propTypes = {
  input: _propTypes.PropTypes.shape(_propTypes.PropTypes.any).isRequired,
  id: _propTypes.PropTypes.string,
  disabled: _propTypes.PropTypes.bool,
  placeholder: _propTypes.PropTypes.string,
  type: _propTypes.PropTypes.string,
  button: {
    disabled: _propTypes.PropTypes.bool,
    label: _propTypes.PropTypes.string,
    onClick: _propTypes.PropTypes.func
  }
};
Input.defaultProps = {
  id: (0, _uuid.default)(),
  disabled: false,
  placeholder: null,
  type: 'text',
  button: {
    disabled: false,
    label: '',
    onClick: null
  }
};

var _default = function _default(props) {
  return _react.default.createElement(_reduxForm.Field, _extends({}, props, {
    component: Input
  }));
};

exports.default = _default;